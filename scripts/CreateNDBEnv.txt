#!/bin/bash
#
# Default Container Identified
export vLAN=`grep "Secondary VLAN:" Env.txt| awk '{print $3}'`

cntr=`ncli container list | grep default-container | grep VStore | gawk -F: '{ printf("%s",$2);}' | cut -c2-`
HPOCIP=(10.55.251.38 10.136.239.13 10.42.194.11)

OldOne=999999
for t in ${HPOCIP[@]}; do
       ping -c 2 ${t} > /tmp/Test_${t}.txt 2>&1
       NewOne=`head -n 3 /tmp/Test_${t}.txt|tail -1 |awk {'print $7'}|cut -d "=" -f 2|cut -d "." -f 1`
        echo "IP is ${t}, Time is $NewOne"
        if [ $OldOne -lt $NewOne ];then
        echo "Current IP is $HPOC"
        else
        OldOne=$NewOne
        HPOC=$t
        echo "Current IP is $HPOC"
        fi
done


echo " HPOC is $HPOC"

# Era Server
# Download Era Server from url
# acli image.create Era2.2 image_type=kDiskImage container=Images source_url=https://XXX.XXX.DDDâ€¦.  &

url="http://$HPOC/workshop_staging/ndb"
imageEra=( ERA-Server-build-2.4-515d14f9e294df50af1d4f448a5f0e4df4308fc3)
for t in ${imageEra[@]}; do
       time acli image.create EraServerPoc source_url=${url}/${t}.qcow2 container=$cntr image_type=kDiskImage
done

acli -y vm.delete EraServer 
acli vm.create EraServer
acli vm.disk_create EraServer clone_from_image=EraServerPoc
acli vm.update EraServer num_vcpus=4 num_cores_per_vcpu=1 memory=16G
acli vm.nic_create EraServer network=Primary
acli vm.on EraServer

#Create Private Vlan (It works under AHV 5.1X)
acli net.create Private vlan=0

# Oracle 12c Software Installed only (DB + Grid)
url="http://$HPOC/workshop_staging/ndb/oracle12cSIHA-new"
image=(12c-bootdisk 12c-disk1 12c-disk2)
for t in ${image[@]}; do
        acli image.create $t source_url=${url}/${t}.qcow2 container=$cntr image_type=kDiskImage &
done

#Oracle 19c Software Install Only ( DB + Grid)
url="http://$HPOC/workshop_staging/ndb/oracle19cSIHA-new"
image=(19c-bootdisk 19c-disk1 19c-disk2)
for t in ${image[@]}; do
        acli image.create $t source_url=${url}/${t}.qcow2 container=$cntr image_type=kDiskImage &
done

#MSSQL 2016 Enterprise + Windows datacenter edition
url="http://$HPOC/workshop_staging/ndb/SQLServer/"
image=(MSSQL_1 MSSQL_2)
for t in ${image[@]}; do
        acli image.create $t source_url=${url}/${t}.qcow2 container=$cntr image_type=kDiskImage &
done

#MSSQL 2019 profile
url="http://$HPOC/workshop_staging"
image=(MSSQL19-Profile-Disk1 MSSQL19-Profile-Disk2)
for t in ${image[@]}; do
        acli image.create $t source_url=${url}/${t}.qcow2 container=$cntr image_type=kDiskImage &
done


#MSSQL 2016 Windows PDC
url="http://$HPOC/workshop_staging/ndb/SQLServer/Old Images"
image=(MSSQL2016_PDC)
for t in ${image[@]}; do
        acli image.create $t source_url="${url}/${t}.qcow2" container=$cntr image_type=kDiskImage &
done


# Oracle 12c with ASM and db created.
url="http://$HPOC/workshop_staging/ndb/oracle12cSIHA"
image=(12c_bootdisk 12c_disk1 12c_disk2 12c_disk3 12c_disk4 12c_disk5 12c_disk6 )
for t in ${image[@]}; do
        acli image.create ${t}_b source_url=${url}/${t}.qcow2 container=$cntr image_type=kDiskImage &
done

# Oracle 19c with ASM and db created.
url="http://$HPOC/workshop_staging/ndb/oracle19cSIHA"
image=(19c-bootdisk 19c-disk1 19c-disk2 19c-disk3 19c-disk4 19c-disk5 19c-disk6 19c-disk7 19c-disk8 19c-disk9)
for t in ${image[@]}; do
        acli image.create ${t}_b source_url=${url}/${t}.qcow2 container=$cntr image_type=kDiskImage &
done

sleep 60

export Task=`ecli task.list status_list=kRunning|wc |awk {'print $1'}`

while  [ $Task != 1 ]
do
Task=`ecli task.list status_list=kRunning|wc |awk {'print $1'}`
echo Please wait. There are $Task image tasks still running.

sleep 5
done

########. Create VM

acli vm.create WinPDC
acli vm.disk_create WinPDC clone_from_image=MSSQL2016_PDC
acli vm.update WinPDC num_vcpus=2 num_cores_per_vcpu=2 memory=8G
acli vm.nic_create WinPDC network=Primary
acli vm.nic_create WinPDC network=Primary
acli vm.on WinPDC

acli vm.create Oracle19c_Source
image=(19c-bootdisk 19c-disk1 19c-disk2)
for t in ${image[@]}; do
        acli vm.disk_create Oracle19c_Source clone_from_image=${t}
done
acli vm.update Oracle19c_Source num_vcpus=1 num_cores_per_vcpu=1 memory=8G
acli vm.nic_create Oracle19c_Source network=Primary
acli vm.on Oracle19c_Source


acli vm.create Oracle12c_Source
image=(12c-bootdisk 12c-disk1 12c-disk2)
for t in ${image[@]}; do
        acli vm.disk_create Oracle12c_Source  clone_from_image=${t}
done
acli vm.update Oracle12c_Source num_vcpus=1 num_cores_per_vcpu=1 memory=8G
acli vm.nic_create Oracle12c_Source network=Primary
acli vm.on Oracle12c_Source

# SQL Server 2016
acli vm.create SQL2016_Source
image=( MSSQL_1 MSSQL_2)
for t in ${image[@]}; do
        acli vm.disk_create SQL2016_Source  clone_from_image=${t}
done
acli vm.update SQL2016_Source num_vcpus=1 num_cores_per_vcpu=1 memory=8G
acli vm.nic_create SQL2016_Source network=Primary
acli vm.on SQL2016_Source


# SQL Server 2019
acli vm.create SQL2019_Source
image=(MSSQL19-Profile-Disk1 MSSQL19-Profile-Disk2)
for t in ${image[@]}; do
        acli vm.disk_create SQL2019_Source clone_from_image=${t}
done
acli vm.update SQL2019_Source num_vcpus=1 num_cores_per_vcpu=1 memory=8G
acli vm.nic_create SQL2019_Source network=Primary
acli vm.on SQL2019_Source





# Oracle 19C SIHA VM Create
acli vm.create Oracle19c_SIHA
image=(19c-bootdisk_b 19c-disk1_b 19c-disk2_b 19c-disk3_b 19c-disk4_b 19c-disk5_b 19c-disk6_b 19c-disk7_b 19c-disk8_b 19c-disk9_b)
for t in ${image[@]}; do
        acli vm.disk_create Oracle19c_SIHA clone_from_image=${t}
done
acli vm.update Oracle19c_SIHA num_vcpus=1 num_cores_per_vcpu=1 memory=8G
acli vm.nic_create Oracle19c_SIHA network=Primary
acli vm.on Oracle19c_SIHA

# Oracle 12C SIHA VM Create
acli vm.create Oracle12c_SIHA
image=(12c_bootdisk_b 12c_disk1_b 12c_disk2_b 12c_disk3_b 12c_disk4_b 12c_disk5_b 12c_disk6_b )
for t in ${image[@]}; do
        acli vm.disk_create Oracle12c_SIHA clone_from_image=${t}
done
acli vm.update Oracle12c_SIHA num_vcpus=1 num_cores_per_vcpu=1 memory=8G
acli vm.nic_create Oracle12c_SIHA network=Primary
acli vm.on Oracle12c_SIHA


# ISO image import
acli image.create SQL2014SP3 image_type=kIsoImage source_url=http://$HPOC/workshop_staging/SQLServer2014SP3.iso container=Images &
acli image.create CentOS7 image_type=kIsoImage source_url=http://$HPOC/workshop_staging/CentOS7.iso container=Images &

